using System;
namespace DepthInCShare.深入理解CShare.C2
{
    public class 最后的一些特性
    {
        public 最后的一些特性()
        {
        }
        //目前为止我们已经学了C#2的四大特性 泛型、可空类型，委托增强、迭代器块


        //分部类型-----可以在多个源文件中为一个类型编写代码。特别适用于部分代码是自动生成，而其他部分的代码为手写的类型

        //静态类-----对工具类进行整理，以便编译器能够明白你是否在不恰当的使用他们，并使你的意图更清晰

        //独立的取值方法/赋值方法属性访问器-------属性终于有公有的取值方法和私有的赋值方法

        //命名空间别名----在类型名称不唯一的情况下的一种解决方式

        //Pragma指令-----用于操作的特定编译器指令，如禁止对某一特殊代码段使用特定的警告信息

        //固定大小的缓冲区----在非安全代码中，可以更多地控制结构处理数组的方法。
        //InternalsVisibleToAttribute(友元程序集)----跨越语言、框架和运行时的一个特性，在你需要时能对选定的程序集进行更多的访问



        #region 分部类型
        // partial

        partial class testPartial
        {
            public void Test1()
            {
                Console.WriteLine("Test1");
            }
        }
        partial class testPartial
        {
            public void Test2()
            {

            }
        }

        #endregion

        #region 静态类型
        //静态类和非静态类最大的区别就是静态类不能new(实例化)。由于不存在任何实例变量，因此可以使用类名本身访问静态类的成员

        //工具类主要特性
        //1、所有成员都是静态的
        //2、类直接从object派生；
        //3、一般情况下不应该有状态，除非涉及高速缓存或者单例
        //4、不能存在任何可见的构造函数；(只能有默认的无参的构造函数)
        //5、类可以是密封(sealed不能被继承)的
        #endregion
    }
}
