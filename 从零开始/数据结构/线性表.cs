using System;
namespace 从零开始.数据结构.线性表
{
    public class LineList
    {
        //线性表
        // 含义参考链接https://www.cnblogs.com/edisonchou/p/4593972.html

        //个人总结
        //1、线性表分为顺序表和链式表
        //顺序表：用一块地址连续的存储空间存储；在内存中存储的空间是连续的
        //链式表：元素在内存中存储，可以在内存中是不连续的地址。

        //C#中的顺序表：
        //静态顺序表：数组(int[])
        //动态顺序表：ArrayList   
        //          List<T>
        //动态顺序表，在C#中是通过判断数组长度，来动态的把内存中一组连续的地址，移动到一组新两倍大的的地址；（通过搬家的办法来实现动态扩容）


        //单链表
        //单链表，每个节点都有两部分组成：数据域(存储数据)和指针域(指向下一个数据的地址)，单链表的终端结点指针指向的是空地址

        //C#中的单链表ListDicetionary---基于key/value的单链表(建议少于10个的集合实用)


        //双链表
        //双链表与单链表不同的是，双链表有两个指针域，一个指向前驱节点，另一个指向后继节点。
        //双链表中有两个指针，指向前驱和后继，这样可以方便的找到某个节点的前驱节点和后继节点，从而不必重新遍历一次链表，这在某些场景中是非常实用的

        //C#中的泛型双向链表 LinkedList<T>




        //循环链表
        //循环链表的终端节点指针指向头结点，收尾相接。
        //循环链表和单链表的主要差异就是在于循环判断上，单链表判断p.next是否为空。循环链表判断p.next不等于头结点，则循环结束。


        //循环链表与约瑟夫问题
        //何为约瑟夫问题：N个人围成圈，从第一个开始报数，第M个将会被杀掉，最后剩下Q个，用循环链表来解决该问题。
    }
}
